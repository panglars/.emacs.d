(use-package copilot
  :disabled
  :defer t
  :straight (:host github :repo "zerolfx/copilot.el" :files ("dist" "*.el"))
  :hook ((prog-mode . (lambda ()
                        (unless (eq major-mode 'beancount-mode)
                          (copilot-mode 1)))))
  :bind (:map copilot-completion-map
              ("C-j" . copilot-accept-completion)
              ("M-j" . copilot-clear-overlay)
              ("C-c j n" . copilot-next-completion)
              ("C-c j p" . copilot-previous-completion))
  :init
  (setq copilot--indent-warning-printed-p t))

;; prompts 
(defvar lan/gptel-prompts
  '((translator . (:sys "You are a professional translator."
                        :user "You will be provided with text delimited by triple backticks, your task is to translate the wrapped text into %s. You should only output the translated text. \n```%s```"))
    (word . (:sys "You are a experienced linguist."
                  :user "You will be provided with a sentence delimited by triple backticks. your task is to, for the wrapped text, understand it. For the word `%s', provide its pronunciation, synonyms, meaning in the context and create an example sentence using the lemma of the word. Your output should use the following format:\n【发音】<pronunciation>\n【近义】<synonyms>\n【释义】<meaning>\n【例句】<example-sentence>\n```%s```"))
    (polish . (:sys "You are an English translator, spelling corrector and improver."
                    :user "You will be provided with text delimited by triple backticks, your task is to detect the language, translate it and answer in the corrected and improved version of my text, in English. I want you to replace my simplified A0-level words and sentences with more beautiful and elegant, upper level English words and sentences. Keep the meaning same, but make them more literary. I want you to only reply the correction, the improvements and nothing else, do not write explanations. \n```%s```"))
    (programming . (:sys "You are a professional programmer."
                         :user "You will be provided with code delimited by triple backticks, your task is to determine the language and explain the code to me. \n```%s```"))
    (summary . (:sys "You are a professional reviewer."
                     :user "You will be provided with text delimited by triple backticks, your task is to summarize the wrapped text into a single sentence. \n```%s```"))
    (grammar . (:sys "You are a grammar checker that looks for mistakes and makes sentence’s more fluent."
                     :user "You will be provided with text delimited by triple backticks. Your task is to correct grammar errors in the wrapped text. You should only output the revised text and list the changes one by one. You should output in the following format:\nCorrected text:\n ...\nChanges:\n1. ...\n2. ...\nIf the user input is grammatically correct and fluent, just reply “sounds good”. \n```%s```"))
    (commit . (:sys "You are an expert programmer, and you are trying to summarize a code change."
                    :user "You will be provided with text generated by \"git diff\" delimited by triple backticks. Your task is to summarize the change and write a commit message. \nThe commit message should be structured as follows:\n<type>[optional scope]: <description>\n```\n%s\n```"))))


(use-package gptel
  :config
  (defun lan/gptel-commit-summary ()
    "Summarize current git commit."
    (interactive)
    (let* ((prompts (alist-get 'commit lan/gptel-prompts))
           (sys-prompt (plist-get prompts :sys))
           (user-prompt (format
                         (plist-get prompts :user)
                         (shell-command-to-string "git diff --cached"))))
      (gptel-request user-prompt
        :stream t
        :system sys-prompt)))
  )


(provide 'init-copilot)
